# Generated by Django 5.1 on 2024-08-29 19:41

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FactionAdvantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faction_id', models.PositiveIntegerField()),
                ('terrain_amount', models.FloatField()),
                ('dynamic_amount', models.FloatField()),
                ('total_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledBattlefield',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battlefield_type', models.CharField(choices=[('Downtime', 'Downtime'), ('Normal', 'Normal'), ('System Flipped', 'System Flipped')], default='Normal', max_length=15)),
                ('defender', models.PositiveIntegerField()),
                ('fc', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('spawn_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('expected_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_between_downtime_and_four_hours_after', models.BooleanField(default=False, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='SolarSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solarsystem_id', models.PositiveIntegerField(unique=True)),
                ('owner_faction', models.PositiveIntegerField()),
                ('occupier_faction', models.PositiveIntegerField()),
                ('contested_status', models.CharField(max_length=50)),
                ('contested_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='FactionAdvantageDelta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('terrain_amount', models.FloatField(blank=True, null=True)),
                ('dynamic_amount', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('faction_advantage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deltas', to='eve_tools.factionadvantage')),
            ],
        ),
        migrations.AddField(
            model_name='factionadvantage',
            name='solar_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantages', to='eve_tools.solarsystem'),
        ),
        migrations.CreateModel(
            name='BattlefieldCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('winner', models.PositiveIntegerField()),
                ('defender', models.PositiveIntegerField()),
                ('fc', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('solar_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BattlefieldCompletion', to='eve_tools.solarsystem')),
            ],
        ),
        migrations.CreateModel(
            name='SolarSystemDelta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('owner_faction', models.PositiveIntegerField(blank=True, null=True)),
                ('occupier_faction', models.PositiveIntegerField(blank=True, null=True)),
                ('contested_status', models.CharField(blank=True, max_length=50, null=True)),
                ('contested_amount', models.FloatField(blank=True, null=True)),
                ('solar_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deltas', to='eve_tools.solarsystem')),
            ],
        ),
    ]
